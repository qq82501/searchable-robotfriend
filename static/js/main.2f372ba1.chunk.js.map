{"version":3,"sources":["component/Card.js","component/Cardlist.js","component/Searchbox.js","component/Scroll.js","container/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","id","name","email","react_default","a","createElement","className","src","concat","alt","Cardlist","robots","map","user","i","component_Card","key","Searchbox","searchChange","onChange","type","placeholder","Scroll","props","style","overflow","height","border","children","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","searchfield","target","value","state","_this2","fetch","then","Response","json","users","_this$state","filteredRobot","filter","robot","toLowerCase","includes","length","component_Searchbox","component_Scroll","component_Cardlist","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_container_App"],"mappings":"yNAceA,EAZF,SAAAC,GAAsB,IAApBC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MACrB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mDACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAG,wBAAAC,OAA0BR,EAA1B,iBAA6CS,IAAI,iBACzDN,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKJ,GACLE,EAAAC,EAAAC,cAAA,SAAIH,MCeLQ,EAnBC,SAAAX,GAAa,IAAXY,EAAWZ,EAAXY,OACd,OACIR,EAAAC,EAAAC,cAAA,WAEMM,EAAOC,IAAI,SAACC,EAAKC,GACf,OACEX,EAAAC,EAAAC,cAACU,EAAD,CACEC,IAAKF,EACLd,GAAIW,EAAOG,GAAGd,GACdC,KAAMU,EAAOG,GAAGb,KAChBC,MAAOS,EAAOG,GAAGZ,YCCtBe,EAbE,SAAAlB,GAAoB,IAAlBmB,EAAkBnB,EAAlBmB,aACjB,OACEf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,SACEc,SAAUD,EACVZ,UAAU,mCACVc,KAAK,SACLC,YAAY,mBCELC,EARA,SAACC,GACd,OACEpB,EAAAC,EAAAC,cAAA,OAAKmB,MAAO,CAACC,SAAS,SAAUC,OAAO,QAASC,OAAO,qBACpDJ,EAAMK,WCqDEC,qBAhDb,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACXC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAcFI,eAAiB,SAACC,GACfR,EAAKS,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SAdzCZ,EAAKa,MAAQ,CACXhC,OAAS,GACT6B,YAAc,IAJLV,mFAQK,IAAAc,EAAAX,KACjBY,MAAM,8CACJC,KAAK,SAAAC,GAAa,OAAOA,EAASC,SAClCF,KAAK,SAAAG,GAASL,EAAKL,SAAS,CAAC5B,OAAOsC,uCAO/B,IAAAC,EACuBjB,KAAKU,MAA3BhC,EADDuC,EACCvC,OAAO6B,EADRU,EACQV,YAGRW,EAAgBxC,EAAOyC,OAAO,SAAAC,GAClC,OAAOA,EAAMpD,KAAKqD,cAAcC,SAASf,EAAYc,iBAGrD,OAAsB,IAAlB3C,EAAO6C,OACFrD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,WAIHH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,eACAH,EAAAC,EAAAC,cAACoD,EAAD,CAAWvC,aAAgBe,KAAKI,iBAIhClC,EAAAC,EAAAC,cAACqD,EAAD,KACEvD,EAAAC,EAAAC,cAACsD,EAAD,CAAUhD,OAASwC,aAvCjBS,cCEHC,SAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAnB,KAAAkB,EAAAE,KAAA,UAAqBpB,KAAK,SAAA/C,GAAiD,IAA9CoE,EAA8CpE,EAA9CoE,OAAQC,EAAsCrE,EAAtCqE,OAAQC,EAA8BtE,EAA9BsE,OAAQC,EAAsBvE,EAAtBuE,OAAQC,EAAcxE,EAAdwE,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,OCIDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHzE,EAAAC,EAAAC,cAACF,EAAAC,EAAMyE,WAAP,KACE1E,EAAAC,EAAAC,cAACyE,EAAD,QAQJjB","file":"static/js/main.2f372ba1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({id, name, email}) =>{\r\n    return(\r\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow shadow-5 tc\">\r\n            <img src={`https://robohash.org/${id}?size=200x200`} alt=\"robot-friend\"/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import React from \"react\";\r\nimport Card from './Card';\r\n\r\n\r\nconst Cardlist =({robots}) =>{\r\n    return(     \r\n        <div>\r\n            {\r\n              robots.map((user,i) =>{\r\n                return (\r\n                  <Card \r\n                    key={i}\r\n                    id={robots[i].id}\r\n                    name={robots[i].name}\r\n                    email={robots[i].email} \r\n                  />\r\n                );\r\n              })\r\n            } \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cardlist;\r\n","import React from \"react\";\r\n\r\nconst Searchbox =({searchChange}) => {\r\n  return(\r\n    <div className=\"pa2\">\r\n      <input\r\n        onChange={searchChange}\r\n        className=\"pa3 bg b--green bg-lightest-blue\"\r\n        type=\"search\" \r\n        placeholder=\"search robot\">\r\n      </input>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Searchbox;","import React from \"react\";\r\n\r\n\r\nconst Scroll = (props) =>{\r\n  return(\r\n    <div style={{overflow:'scroll', height:'500px', border:'2px black dashed'}}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scroll","import React from \"react\";\r\nimport Cardlist from \"../component/Cardlist\";\r\nimport Searchbox from \"../component/Searchbox\";\r\nimport Scroll from \"../component/Scroll\";\r\n// import { robots } from \"./robots\";\r\nimport { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\n\r\n\r\nclass App extends Component{\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      robots : [],\r\n      searchfield : ''\r\n    }\r\n  }\r\n\r\n componentDidMount(){\r\n   fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(Response => {return Response.json();})\r\n    .then(users =>{this.setState({robots:users})})\r\n  \r\n }\r\n  \r\n  onSearchChange = (event) =>{\r\n     this.setState({searchfield:event.target.value})\r\n  }\r\n  render(){\r\n    const {robots,searchfield} = this.state\r\n    //從原本的robots當中，篩選出新的robot(array)，\r\n    //需包含searchfield為篩選條件\r\n    const filteredRobot = robots.filter(robot =>{\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n      })\r\n\r\n      if (robots.length === 0) {\r\n        return <h1 className=\"tc\">Loading</h1>\r\n      }\r\n      else{\r\n        return (      \r\n            <div className=\"tc\">\r\n              <h1 className=\"f1\">RoboFriends</h1>\r\n              <Searchbox searchChange = {this.onSearchChange} />\r\n\r\n       {/* 為了將Cardlist包住，Scroll不像Searchbox/Cardlist是單行封閉的形式 \r\n           而是如div一樣包裹住內容，此時Cardlist為Scroll的Children*/}\r\n              <Scroll>\r\n                <Cardlist robots ={filteredRobot} />\r\n              </Scroll>\r\n            </div>\r\n          )\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n// import Cardlist from './Cardlist';\nimport App from './container/App';\nimport \"tachyons\"\nimport reportWebVitals from './reportWebVitals';\n// import { robots } from './robots';\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();"],"sourceRoot":""}